(function(){var b=window.melange=function(){return new b};if(window.jQuery===undefined)throw new Error("jQuery package must be loaded exposing jQuery namespace");if(window.JSON===undefined)throw new Error("json2 package must be loaded exposing JSON namespace");var e=b;e.config={};(function(){var a=jQuery("script[melangeConfig][src$='melange.js']").attr("melangeConfig");if(a){a=JSON.parse("{ "+a+" }");jQuery.extend(e.config,a)}})();e.clone=function(a){return jQuery.extend(true,{},a)};e.setOptions=
function(a){switch(a.debug){case true:e.logging.setDebug();break;case false:e.logging.unsetDebug();break;default:e.logging.setDebug()}a.debugLevel&&e.logging.setDebugLevel(a.debugLevel)};e.loadGoogleApi=function(a,c,f,d){if(!a||!c)throw new TypeError("modulename must be defined");a={name:a,version:c,settings:f};jQuery.extend(a.settings,{callback:d});google.load(a.name,a.version,a.settings)};(function(){b.error=window.melange.error=function(){return new b.error};var a=b.error;a.createErrors=function(c){jQuery.each(c,
function(){b.error[this]=Error})};a.createErrors(["DependencyNotSatisfied","notImplementedByChildClass"])})();(function(){b.logging=window.melange.logging=function(){return new b.logging};var a=b.logging,c=false,f=5;a.setDebug=function(){c=true};a.unsetDebug=function(){c=false};a.isDebug=function(){return c?true:false};a.setDebugLevel=function(d){if(isNaN(d))throw new b.error.TypeError("melange.logging.setDebugLevel: parameter must be a number");if(d<=0)d=1;if(d>=6)d=5;f=d};a.getDebugLevel=function(){return f};
a.debugDecorator=function(d){d.log=function(g,h){b.logging.isDebug()&&f>=g&&console.debug(h)};return d}})();(function(){b.templates=window.melange.templates=function(){return new b.templates};var a=b.logging.debugDecorator(b.templates);b.error.createErrors([]);a._baseTemplate=function(){this.context={};var c=jQuery("script[melangeContext]")[0];if(c!==undefined)if(c=jQuery(c).attr("melangeContext")){eval("var configuration_object = "+c);jQuery.extend(this.context,configuration_object)}}})()})();
window.melange=window.melange.logging.debugDecorator(window.melange);
